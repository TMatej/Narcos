# rename the sql file, that populates the db -> implicit = import.sql
# quarkus.hibernate-orm.sql-load-script=new_name_for_import.sql

# HTTP
quarkus.http.port=8081
%dev.quarkus.http.port=8881

# PostgreSQL
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=u
quarkus.datasource.password=p
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/d

%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/d
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=password

%test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/d
%test.quarkus.datasource.db-kind=postgresql
%test.quarkus.datasource.username=postgres
%test.quarkus.datasource.password=password

quarkus.hibernate-orm.database.generation=drop-and-create

# OpenAPI/Swagger
mp.openapi.extensions.smallrye.info.title=User Service API
%dev.mp.openapi.extensions.smallrye.info.title=User Service API (development)
%test.mp.openapi.extensions.smallrye.info.title=User Service API (test)
mp.openapi.extensions.smallrye.info.description=Service for registration, auth and listing of users
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD
quarkus.swagger-ui.always-include=true

# JWT
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
smallrye.jwt.sign.key.location=META-INF/resources/privateKey.pem
quarkus.native.resources.includes=META-INF/resources/publicKey.pem
%test.mp.jwt.verify.publickey.location=META-INF/resources/test-publicKey.pem
%test.smallrye.jwt.sign.key.location=META-INF/resources/test-privateKey.pem
%dev.mp.jwt.verify.issuer=http://127.0.0.1:8881/auth/login
mp.jwt.verify.issuer=http://127.0.0.1:8081/auth/login
